{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "2461936078298361622"
    }
  },
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "decap-auth-func",
      "maxLength": 21,
      "metadata": {
        "description": "The base app name for the resources."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[replace(format('{0}stg', parameters('appName')), '-', '')]",
      "maxLength": 24,
      "metadata": {
        "description": "Name of storage account (cannot contain any other characters than lowercase a-z)"
      }
    },
    "appServicePlanSKU": {
      "type": "string",
      "defaultValue": "Y1",
      "metadata": {
        "description": "SKU of app service plan."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('{0}-asp', parameters('appName'))]",
      "metadata": {
        "description": "Name of app service plan."
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-appin', parameters('appName'))]",
      "metadata": {
        "description": "Name of app insights."
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('{0}-log', parameters('appName'))]",
      "metadata": {
        "description": "Name of log analytics workspace."
      }
    },
    "diagnosticsName": {
      "type": "string",
      "defaultValue": "[format('{0}-ds', parameters('appName'))]",
      "metadata": {
        "description": "Name of diagnostic settings."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for the deployed resources."
      }
    },
    "githubClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID for the GitHub app - not GitHub OAuth app."
      }
    },
    "githubClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The client secret for the GitHub app - not GitHub OAuth app."
      }
    }
  },
  "variables": {
    "funcAppName": "[substring(format('{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id)), 0, 21)]",
    "secrets": [
      {
        "name": "GITHUB_CLIENT_ID",
        "value": "[parameters('githubClientId')]"
      },
      {
        "name": "GITHUB_CLIENT_SECRET",
        "value": "[parameters('githubClientSecret')]"
      }
    ],
    "kvOfficerRoleId": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
    "blobOwnerRoleId": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
    "storageContributorRoleId": "17d1049b-9a84-46fb-8f53-869881c3d3ab"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-kv', parameters('appName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('funcAppName')), '2022-09-01', 'full').identity.principalId]",
            "permissions": {
              "keys": [
                "get",
                "list",
                "create",
                "delete",
                "update",
                "import",
                "backup",
                "restore",
                "recover",
                "purge"
              ],
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore",
                "purge"
              ],
              "certificates": [
                "get",
                "list",
                "create",
                "delete",
                "update",
                "import",
                "backup",
                "restore",
                "recover",
                "purge"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
      ]
    },
    {
      "copy": {
        "name": "keyVaultSecrets",
        "count": "[length(variables('secrets'))]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', format('{0}-kv', parameters('appName')), variables('secrets')[copyIndex()].name)]",
      "properties": {
        "value": "[variables('secrets')[copyIndex()].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('appName')))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSKU')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
        "Flow_Type": "Bluefield",
        "Application_Type": "web",
        "Request_Source": "rest"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('funcAppName'))]",
      "name": "[parameters('diagnosticsName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ],
        "logs": [
          {
            "enabled": true,
            "category": "FunctionAppLogs"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot",
        "encryption": {
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('funcAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "minTlsVersion": "1.2",
          "linuxFxVersion": "PowerShell|7.4"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('{0}-kv', parameters('appName')))]",
      "name": "[guid(variables('kvOfficerRoleId'), parameters('appName'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('kvOfficerRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('funcAppName')), '2022-09-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('appName')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(parameters('appName'), variables('blobOwnerRoleId'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('blobOwnerRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('funcAppName')), '2022-09-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(parameters('appName'), variables('storageContributorRoleId'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageContributorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('funcAppName')), '2022-09-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-appsettings', parameters('appName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppName": {
            "value": "[variables('funcAppName')]"
          },
          "currentAppSettings": {
            "value": "[list(resourceId('Microsoft.Web/sites/config', variables('funcAppName'), 'appsettings'), '2022-03-01').properties]"
          },
          "appSettings": {
            "value": "[union(reduce(variables('secrets'), createObject(), lambda('cur', 'next', union(lambdaVariables('cur'), createObject(format('{0}', lambdaVariables('next').name), format('@Microsoft.KeyVault(SecretUri={0}/secrets/{1})', reference(resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('appName'))), '2023-07-01').vaultUri, lambdaVariables('next').name))))), reduce(createArray(createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'powershell'), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', parameters('appName')), createObject('name', 'AzureWebJobsStorage__accountName', 'value', parameters('storageAccountName')), createObject('name', 'AzureWebJobsSecretStorageType', 'value', 'keyvault'), createObject('name', 'AzureWebJobsSecretStorageKeyVaultUri', 'value', reference(resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('appName'))), '2023-07-01').vaultUri), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTION_APP_EDIT_MODE', 'value', 'readonly'), createObject('name', 'CALLBACK_TOKEN_URI', 'value', format('https://{0}/api/callback', reference(resourceId('Microsoft.Web/sites', variables('funcAppName')), '2022-09-01').defaultHostName)), createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString), createObject('name', 'ApplicationInsightsAgent_EXTENSION_VERSION', 'value', '~2')), createObject(), lambda('cur', 'next', union(lambdaVariables('cur'), createObject(format('{0}', lambdaVariables('next').name), lambdaVariables('next').value)))))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "8645292991905431810"
            }
          },
          "parameters": {
            "webAppName": {
              "type": "string",
              "metadata": {
                "description": "The name of the web app."
              }
            },
            "appSettings": {
              "type": "object",
              "metadata": {
                "description": "The new app settings for the web app."
              }
            },
            "currentAppSettings": {
              "type": "object",
              "metadata": {
                "description": "The current app settings for the web app."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('webAppName'), 'appsettings')]",
              "properties": "[union(parameters('currentAppSettings'), parameters('appSettings'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('appName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('funcAppName')]"
    }
  }
}